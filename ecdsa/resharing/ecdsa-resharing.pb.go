// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protob/ecdsa-resharing.proto

package resharing

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The Round 1 data is broadcast to peers of the New Committee in this message.
type DGRound1Message struct {
	EcdsaPubX            []byte   `protobuf:"bytes,1,opt,name=ecdsa_pub_x,json=ecdsaPubX,proto3" json:"ecdsa_pub_x,omitempty"`
	EcdsaPubY            []byte   `protobuf:"bytes,2,opt,name=ecdsa_pub_y,json=ecdsaPubY,proto3" json:"ecdsa_pub_y,omitempty"`
	VCommitment          []byte   `protobuf:"bytes,3,opt,name=v_commitment,json=vCommitment,proto3" json:"v_commitment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DGRound1Message) Reset()         { *m = DGRound1Message{} }
func (m *DGRound1Message) String() string { return proto.CompactTextString(m) }
func (*DGRound1Message) ProtoMessage()    {}
func (*DGRound1Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7d3ae1dc68dc295, []int{0}
}

func (m *DGRound1Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DGRound1Message.Unmarshal(m, b)
}
func (m *DGRound1Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DGRound1Message.Marshal(b, m, deterministic)
}
func (m *DGRound1Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DGRound1Message.Merge(m, src)
}
func (m *DGRound1Message) XXX_Size() int {
	return xxx_messageInfo_DGRound1Message.Size(m)
}
func (m *DGRound1Message) XXX_DiscardUnknown() {
	xxx_messageInfo_DGRound1Message.DiscardUnknown(m)
}

var xxx_messageInfo_DGRound1Message proto.InternalMessageInfo

func (m *DGRound1Message) GetEcdsaPubX() []byte {
	if m != nil {
		return m.EcdsaPubX
	}
	return nil
}

func (m *DGRound1Message) GetEcdsaPubY() []byte {
	if m != nil {
		return m.EcdsaPubY
	}
	return nil
}

func (m *DGRound1Message) GetVCommitment() []byte {
	if m != nil {
		return m.VCommitment
	}
	return nil
}

// The Round 2 data is broadcast to other peers of the New Committee in this message.
type DGRound2Message1 struct {
	PaillierN            []byte   `protobuf:"bytes,1,opt,name=paillier_n,json=paillierN,proto3" json:"paillier_n,omitempty"`
	PaillierProof        [][]byte `protobuf:"bytes,2,rep,name=paillier_proof,json=paillierProof,proto3" json:"paillier_proof,omitempty"`
	NTilde               []byte   `protobuf:"bytes,3,opt,name=n_tilde,json=nTilde,proto3" json:"n_tilde,omitempty"`
	H1                   []byte   `protobuf:"bytes,4,opt,name=h1,proto3" json:"h1,omitempty"`
	H2                   []byte   `protobuf:"bytes,5,opt,name=h2,proto3" json:"h2,omitempty"`
	Dlnproof_1           [][]byte `protobuf:"bytes,6,rep,name=dlnproof_1,json=dlnproof1,proto3" json:"dlnproof_1,omitempty"`
	Dlnproof_2           [][]byte `protobuf:"bytes,7,rep,name=dlnproof_2,json=dlnproof2,proto3" json:"dlnproof_2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DGRound2Message1) Reset()         { *m = DGRound2Message1{} }
func (m *DGRound2Message1) String() string { return proto.CompactTextString(m) }
func (*DGRound2Message1) ProtoMessage()    {}
func (*DGRound2Message1) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7d3ae1dc68dc295, []int{1}
}

func (m *DGRound2Message1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DGRound2Message1.Unmarshal(m, b)
}
func (m *DGRound2Message1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DGRound2Message1.Marshal(b, m, deterministic)
}
func (m *DGRound2Message1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DGRound2Message1.Merge(m, src)
}
func (m *DGRound2Message1) XXX_Size() int {
	return xxx_messageInfo_DGRound2Message1.Size(m)
}
func (m *DGRound2Message1) XXX_DiscardUnknown() {
	xxx_messageInfo_DGRound2Message1.DiscardUnknown(m)
}

var xxx_messageInfo_DGRound2Message1 proto.InternalMessageInfo

func (m *DGRound2Message1) GetPaillierN() []byte {
	if m != nil {
		return m.PaillierN
	}
	return nil
}

func (m *DGRound2Message1) GetPaillierProof() [][]byte {
	if m != nil {
		return m.PaillierProof
	}
	return nil
}

func (m *DGRound2Message1) GetNTilde() []byte {
	if m != nil {
		return m.NTilde
	}
	return nil
}

func (m *DGRound2Message1) GetH1() []byte {
	if m != nil {
		return m.H1
	}
	return nil
}

func (m *DGRound2Message1) GetH2() []byte {
	if m != nil {
		return m.H2
	}
	return nil
}

func (m *DGRound2Message1) GetDlnproof_1() [][]byte {
	if m != nil {
		return m.Dlnproof_1
	}
	return nil
}

func (m *DGRound2Message1) GetDlnproof_2() [][]byte {
	if m != nil {
		return m.Dlnproof_2
	}
	return nil
}

// The Round 2 "ACK" is broadcast to peers of the Old Committee in this message.
type DGRound2Message2 struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DGRound2Message2) Reset()         { *m = DGRound2Message2{} }
func (m *DGRound2Message2) String() string { return proto.CompactTextString(m) }
func (*DGRound2Message2) ProtoMessage()    {}
func (*DGRound2Message2) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7d3ae1dc68dc295, []int{2}
}

func (m *DGRound2Message2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DGRound2Message2.Unmarshal(m, b)
}
func (m *DGRound2Message2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DGRound2Message2.Marshal(b, m, deterministic)
}
func (m *DGRound2Message2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DGRound2Message2.Merge(m, src)
}
func (m *DGRound2Message2) XXX_Size() int {
	return xxx_messageInfo_DGRound2Message2.Size(m)
}
func (m *DGRound2Message2) XXX_DiscardUnknown() {
	xxx_messageInfo_DGRound2Message2.DiscardUnknown(m)
}

var xxx_messageInfo_DGRound2Message2 proto.InternalMessageInfo

// The Round 3 data is sent to peers of the New Committee in this message.
type DGRound3Message1 struct {
	Share                []byte   `protobuf:"bytes,1,opt,name=share,proto3" json:"share,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DGRound3Message1) Reset()         { *m = DGRound3Message1{} }
func (m *DGRound3Message1) String() string { return proto.CompactTextString(m) }
func (*DGRound3Message1) ProtoMessage()    {}
func (*DGRound3Message1) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7d3ae1dc68dc295, []int{3}
}

func (m *DGRound3Message1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DGRound3Message1.Unmarshal(m, b)
}
func (m *DGRound3Message1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DGRound3Message1.Marshal(b, m, deterministic)
}
func (m *DGRound3Message1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DGRound3Message1.Merge(m, src)
}
func (m *DGRound3Message1) XXX_Size() int {
	return xxx_messageInfo_DGRound3Message1.Size(m)
}
func (m *DGRound3Message1) XXX_DiscardUnknown() {
	xxx_messageInfo_DGRound3Message1.DiscardUnknown(m)
}

var xxx_messageInfo_DGRound3Message1 proto.InternalMessageInfo

func (m *DGRound3Message1) GetShare() []byte {
	if m != nil {
		return m.Share
	}
	return nil
}

// The Round 3 data is broadcast to peers of the New Committee in this message.
type DGRound3Message2 struct {
	VDecommitment        [][]byte `protobuf:"bytes,1,rep,name=v_decommitment,json=vDecommitment,proto3" json:"v_decommitment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DGRound3Message2) Reset()         { *m = DGRound3Message2{} }
func (m *DGRound3Message2) String() string { return proto.CompactTextString(m) }
func (*DGRound3Message2) ProtoMessage()    {}
func (*DGRound3Message2) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7d3ae1dc68dc295, []int{4}
}

func (m *DGRound3Message2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DGRound3Message2.Unmarshal(m, b)
}
func (m *DGRound3Message2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DGRound3Message2.Marshal(b, m, deterministic)
}
func (m *DGRound3Message2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DGRound3Message2.Merge(m, src)
}
func (m *DGRound3Message2) XXX_Size() int {
	return xxx_messageInfo_DGRound3Message2.Size(m)
}
func (m *DGRound3Message2) XXX_DiscardUnknown() {
	xxx_messageInfo_DGRound3Message2.DiscardUnknown(m)
}

var xxx_messageInfo_DGRound3Message2 proto.InternalMessageInfo

func (m *DGRound3Message2) GetVDecommitment() [][]byte {
	if m != nil {
		return m.VDecommitment
	}
	return nil
}

// The Round 4 "ACK" is broadcast to peers of the Old and New Committees from the New Committee in this message.
type DGRound4Message struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DGRound4Message) Reset()         { *m = DGRound4Message{} }
func (m *DGRound4Message) String() string { return proto.CompactTextString(m) }
func (*DGRound4Message) ProtoMessage()    {}
func (*DGRound4Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7d3ae1dc68dc295, []int{5}
}

func (m *DGRound4Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DGRound4Message.Unmarshal(m, b)
}
func (m *DGRound4Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DGRound4Message.Marshal(b, m, deterministic)
}
func (m *DGRound4Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DGRound4Message.Merge(m, src)
}
func (m *DGRound4Message) XXX_Size() int {
	return xxx_messageInfo_DGRound4Message.Size(m)
}
func (m *DGRound4Message) XXX_DiscardUnknown() {
	xxx_messageInfo_DGRound4Message.DiscardUnknown(m)
}

var xxx_messageInfo_DGRound4Message proto.InternalMessageInfo

func init() {
	proto.RegisterType((*DGRound1Message)(nil), "binance.tsslib.ecdsa.resharing.DGRound1Message")
	proto.RegisterType((*DGRound2Message1)(nil), "binance.tsslib.ecdsa.resharing.DGRound2Message1")
	proto.RegisterType((*DGRound2Message2)(nil), "binance.tsslib.ecdsa.resharing.DGRound2Message2")
	proto.RegisterType((*DGRound3Message1)(nil), "binance.tsslib.ecdsa.resharing.DGRound3Message1")
	proto.RegisterType((*DGRound3Message2)(nil), "binance.tsslib.ecdsa.resharing.DGRound3Message2")
	proto.RegisterType((*DGRound4Message)(nil), "binance.tsslib.ecdsa.resharing.DGRound4Message")
}

func init() { proto.RegisterFile("protob/ecdsa-resharing.proto", fileDescriptor_f7d3ae1dc68dc295) }

var fileDescriptor_f7d3ae1dc68dc295 = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xc1, 0x4f, 0xc2, 0x30,
	0x18, 0xc5, 0xb3, 0x21, 0x10, 0x0a, 0x82, 0x34, 0x26, 0xf6, 0xa0, 0x04, 0x97, 0x98, 0x70, 0x71,
	0x64, 0xc5, 0x8b, 0x57, 0x25, 0xf1, 0xa4, 0x21, 0xc4, 0x83, 0x7a, 0x69, 0x56, 0x56, 0xa1, 0xc9,
	0x68, 0x97, 0xb5, 0x5b, 0xf4, 0xaf, 0xf4, 0x5f, 0x32, 0x2b, 0x5d, 0xc3, 0xc2, 0xf1, 0xfb, 0xbd,
	0xb7, 0xbe, 0xbc, 0xef, 0x1b, 0xb8, 0xce, 0x72, 0xa9, 0x25, 0x9d, 0xb3, 0x4d, 0xa2, 0xe2, 0xfb,
	0x9c, 0xa9, 0x5d, 0x9c, 0x73, 0xb1, 0x0d, 0x0d, 0x86, 0x13, 0xca, 0x45, 0x2c, 0x36, 0x2c, 0xd4,
	0x4a, 0xa5, 0x9c, 0x86, 0xc6, 0x15, 0x3a, 0x57, 0xa0, 0xc1, 0x68, 0xf9, 0xb2, 0x96, 0x85, 0x48,
	0xa2, 0x57, 0xa6, 0x54, 0xbc, 0x65, 0x70, 0x02, 0xfa, 0xc6, 0x45, 0xb2, 0x82, 0x92, 0x1f, 0xe4,
	0x4d, 0xbd, 0xd9, 0x60, 0xdd, 0x33, 0x68, 0x55, 0xd0, 0x8f, 0xa6, 0xfe, 0x8b, 0xfc, 0xa6, 0xfe,
	0x09, 0x6f, 0xc1, 0xa0, 0x24, 0x1b, 0xb9, 0xdf, 0x73, 0xbd, 0x67, 0x42, 0xa3, 0x96, 0x31, 0xf4,
	0xcb, 0x67, 0x87, 0x82, 0x3f, 0x0f, 0x5c, 0xd8, 0x58, 0x6c, 0x63, 0x23, 0x78, 0x03, 0x40, 0x16,
	0xf3, 0x34, 0xe5, 0x2c, 0x27, 0xa2, 0x8e, 0xad, 0xc9, 0x1b, 0xbc, 0x03, 0x43, 0x27, 0x67, 0xb9,
	0x94, 0xdf, 0xc8, 0x9f, 0xb6, 0x66, 0x83, 0xf5, 0x79, 0x4d, 0x57, 0x15, 0x84, 0x57, 0xa0, 0x2b,
	0x88, 0xe6, 0x69, 0xc2, 0x6c, 0x70, 0x47, 0xbc, 0x57, 0x13, 0x1c, 0x02, 0x7f, 0x17, 0xa1, 0x33,
	0xc3, 0xfc, 0x5d, 0x64, 0x66, 0x8c, 0xda, 0x76, 0xc6, 0x55, 0x7c, 0x92, 0x0a, 0xf3, 0x32, 0x89,
	0x50, 0xc7, 0xbc, 0xdd, 0xab, 0x49, 0xd4, 0x90, 0x31, 0xea, 0x36, 0x65, 0x1c, 0xc0, 0x93, 0x42,
	0x38, 0x98, 0x39, 0xb6, 0x70, 0x25, 0x2f, 0x41, 0xbb, 0x5a, 0x3d, 0xb3, 0xfd, 0x0e, 0x43, 0xf0,
	0x78, 0xe2, 0xc4, 0x55, 0xdf, 0x92, 0x24, 0xec, 0x68, 0x91, 0xde, 0xa1, 0x6f, 0xb9, 0x3c, 0x82,
	0xc1, 0xd8, 0x1d, 0xf0, 0xc1, 0x7e, 0xfa, 0x34, 0xfe, 0x1a, 0x99, 0x6b, 0xcc, 0xdd, 0x99, 0x69,
	0xc7, 0xfc, 0x0d, 0x8b, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x5a, 0xd7, 0x95, 0x2d, 0x02,
	0x00, 0x00,
}
